version: '3.6'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    hostname: zookeeper
    ports:
      - 32181:32181
    environment:
      ZOOKEEPER_CLIENT_PORT: 32181
    networks:
      - utm
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data

  kafka:
    image: confluentinc/cp-kafka:6.2.0
    hostname: kafka
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:32181
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://${KAFKA_HOST:-kafka}:9092
      - KAFKA_BROKER_ID=1
    networks:
      - utm
    depends_on:
      - zookeeper
    restart: always

  kafka-ui:
    image: provectuslabs/kafka-ui:0.1.0
    container_name: kafka-ui
    networks:
      - utm
    ports:
      - "${KAFKA_UI_PORT:-8888}:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:32181
    depends_on:
      - kafka
    profiles:
      - extra

  postgres:
    image: postgis/postgis:12-master
    hostname: postgres
    container_name: postgres
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    networks:
      - utm
    volumes:
      - pg-data:/var/lib/postgresql/data
      - ./databases/initdb/local:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=passw0rd!
      - PGDATA=/var/lib/postgresql/data
      - POSTGRES_DB=postgres
    # Make postgres logs. More information about logging, see official documentation: https://www.postgresql.org/docs/11/runtime-config-logging.html
    command: postgres -c log_destination=stderr -c log_statement=all -c log_connections=on -c log_disconnections=on
    logging:
      options:
        max-size: "10k"
        max-file: "5"

  mongodb:
    image: mongo:4.2.3-bionic
    container_name: mongodb
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_DATABASE=local_readdb
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
    volumes:
      # seeding scripts
      - ./databases/seeder/mongo:/docker-entrypoint-initdb.d
      # named volumes
      - mongodb:/data/db
      # - mongoconfig:/data/configdb
    networks:
      - utm
  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    depends_on:
      - 'mongodb'
    restart: unless-stopped
    ports:
      - 8081:8081
    env_file: .env.local
    environment:
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
      ME_CONFIG_MONGODB_SERVER: "mongodb"
    networks:
      - utm
  dynamodb:
    build:
      context: "."
      dockerfile: ./containers/dynamodb/Dockerfile.local
    hostname: dynamodb
    container_name: dynamodb
    command: -jar DynamoDBLocal.jar -sharedDb -dbPath ./data -optimizeDbBeforeStartup
    networks:
      - utm
    ports:
      - '8000:8000'
    volumes:
      - dynamodb-data:/home/dynamodblocal/data

  dynamodb-admin:
    image: aaronshaf/dynamodb-admin
    networks:
      - utm
    environment:
      DYNAMO_ENDPOINT: http://dynamodb:8000
      AWS_REGION: eu-west-1
      AWS_ACCESS_KEY_ID: local
      AWS_SECRET_ACCESS_KEY: local
    ports:
      - '8001:8001'
    depends_on:
      - dynamodb

  opensearch-node:
    image: opensearchproject/opensearch:1.3.0
    container_name: opensearch-node
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch-node
      - discovery.seed_hosts=opensearch-node
      - cluster.initial_master_nodes=opensearch-node
      - bootstrap.memory_lock=true # along with the memlock settings below, disables swapping
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # minimum and maximum Java heap size, recommend setting both to 50% of system RAM
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536 # maximum number of open files for the OpenSearch user, set to at least 65536 on modern systems
        hard: 65536
    volumes:
      - opensearch-data:/usr/share/opensearch/data
    ports:
      - 9200:9200
      - 9600:9600 # required for Performance Analyzer
    networks:
      - utm
  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:1.3.0
    container_name: opensearch-dashboards
    ports:
      - 5601:5601
    expose:
      - "5601"
    environment:
      OPENSEARCH_HOSTS: '["https://opensearch-node:9200"]' # must be a string with no spaces when specified as an environment variable
    networks:
      - utm

volumes:
  zookeeper-data:
  pg-data:
  mongodb:
  opensearch-data:

  dynamodb-data:
    driver: local

networks:
  utm:
